path=build.gradle.kts
type=TEXT
content=
plugins {
    java
    kotlin("jvm") version "1.6.10"
    id("de.menkalian.vela.keygen")
}

group = "de.menkalian.vela.test"

repositories {
    mavenCentral()
}

dependencies {
    implementation(kotlin("stdlib"))

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.7.0")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.0")
}

tasks.test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}

keygen {
    create("default") {
        targetPackage.set("de.menkalian.vela.test")
    }
    create("diffSep") {
        sourceDir.set(File(projectDir, "src/main/dfs"))
        targetPackage.set("de.menkalian.vela.test.diffsep")
        separator.set("/")
    }
    create("recScan") {
        sourceDir.set(File(projectDir, "src/main/rsc"))
        targetPackage.set("de.menkalian.vela.test.recscan")
        scanRecursive.set(true)
    }
    create("recInd") {
        sourceDir.set(File(projectDir, "src/main/rin"))
        targetPackage.set("de.menkalian.vela.test.recind")
        scanRecursive.set(true)
        prefixRecursive.set(true)
    }
    create("dirString") {
        sourceDir.set(File(projectDir, "src/main/dst"))
        targetPackage.set("de.menkalian.vela.test.dirstring")
        separator.set(":")
        finalLayerAsString.set(true)
    }
}
---
path=settings.gradle.kts
type=TEXT
content=
rootProject.name = "test"

---
path=src/main/keygen/Vela.ckf
type=TEXT
content=
Vela
  Test
    Key
    Unit
---
path=src/main/dfs/paths.ckf
type=TEXT
content=
path
  to
    resource
    articles
---
path=src/main/rsc/sub/folder/to/scan/Test.ckf
type=TEXT
content=
Test
  Vela
    Past
    Future
---
path=src/main/rin/De/Menkalian/Auriga.ckf
type=TEXT
content=
Auriga
  Plugin
    Gradle
    Maven
---
path=src/main/dst/Strings.ckf
type=TEXT
content=
Direct
  Value
  Generated
    Str
---
path=src/main/java/de/menkalian/vela/test/Main.java
type=TEXT
content=
package de.menkalian.vela.test;

import de.menkalian.vela.test.Vela;

public class Main {
    public static void main(String[] args) {
        System.out.println(Vela.Test.Key.INSTANCE.get__BASE());
    }
}
---
path=src/test/java/de/menkalian/vela/test/MainTest.java
type=TEXT
content=
package de.menkalian.vela.test;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Assertions;

import de.menkalian.vela.test.Vela;
import de.menkalian.vela.test.diffsep.path;
import de.menkalian.vela.test.recind.De;
import de.menkalian.vela.test.dirstring.Direct;

public class MainTest {
    @Test
    public void printVariables() {
        Assertions.assertEquals("Vela.Test.Unit", Vela.Test.Unit.INSTANCE.get__BASE());
        Assertions.assertEquals("path/to/resource", path.to.resource.INSTANCE.get__BASE());
        Assertions.assertEquals("Test.Vela.Past", de.menkalian.vela.test.recscan.Test.Vela.Past.INSTANCE.get__BASE());
        Assertions.assertEquals("De.Menkalian.Auriga.Plugin.Gradle", De.Menkalian.Auriga.Plugin.Gradle.INSTANCE.get__BASE());
        Assertions.assertEquals("Direct:Generated:Str", Direct.Generated.INSTANCE.getStr());
        Assertions.assertEquals("String", Direct.Generated.INSTANCE.getStr().getClass().getSimpleName());
    }
}

---
path=src/test/kotlin/de/menkalian/vela/test/KotlinTest.kt
type=TEXT
content=
package de.menkalian.vela.test

import org.junit.jupiter.api.Test
import org.junit.jupiter.api.Assertions

import de.menkalian.vela.test.Vela
import de.menkalian.vela.test.diffsep.path
import de.menkalian.vela.test.recind.De
import de.menkalian.vela.test.dirstring.Direct

class KotlinTest {
    @Test
    fun printVariables() {
        Assertions.assertEquals("Vela.Test.Key", Vela.Test.Key.toString())
        Assertions.assertEquals("path/to/articles", path.to.articles.toString())
        Assertions.assertEquals("Test.Vela.Future", de.menkalian.vela.test.recscan.Test.Vela.Future.toString())
        Assertions.assertEquals("De.Menkalian.Auriga.Plugin.Maven", De.Menkalian.Auriga.Plugin.Maven.toString())
        Assertions.assertEquals("Direct:Value", Direct.Value)
        Assertions.assertEquals("String", Direct.Value::class.java.simpleName)
    }
}
